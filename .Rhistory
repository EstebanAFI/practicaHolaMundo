#--- se utiliza un estadistico apoya en la distribucion de t-student
#--- intervalo media (nivel alpha=0.05)
#### PDTE CONFIRMAR TAMPO N-1 o N
alpha=0.05
cota.inferior.medlb <- media - qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #15.09439
cota.superior.medlb <- media + qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #16.07161
#aproximacion por la normal
cota.superior.medlb <- media - qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #16.06742
cota.inferior.medlb <- media + qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #15.09858
#--- intervalo para la varianza
alpha=0.05
cota.inferior.varlb <- (tamaño - 1)*var(cangrejos$FL) / qchisq(1-alpha/2,tamaño - 1) #10.13188
cota.superior.varlb <- (tamaño - 1)*var(cangrejos$FL) / qchisq(alpha/2,tamaño - 1)  # 15.02379
#------ Influye el sexo en el tamaño del lobulo
# Vamos hacer un contraste de hioitesis por diferencia de medias para los dos grupos
cangrejos.machos  <- cangrejos[cangrejos$sex =="M","FL"]
cangrejos.hembras <- cangrejos[cangrejos$sex =="F","FL"]
# hacemos el t.test
t.test(cangrejos.machos,cangrejos.hembras,alternative=c("two.sided"),conf.level=0.95)
# p-value = 0.5426  p-valor alto las diferncias detectadas son minimas
# t = 0.60998
#----- Influye la especie en el tamaño del lobulo
cangrejos.espc.o  <- cangrejos[cangrejos$sp == "O","FL"]
cangrejos.espc.b  <- cangrejos[cangrejos$sp == "B","FL"]
t.test(cangrejos.espc.o,cangrejos.espc.b,alternative=c("two.sided"),conf.level=0.95)
#  p-value = 8.97e-11
# t = 6.8551
attach(cangrejos)
library(lattice)
histogram( ~ CW | sp, data = crabs)
bwplot( ~ CW | sp, data = crabs, layout = c(1, 2))
bwplot(sex ~ CW | sp, data = crabs, layout = c(1, 2))
histogram( ~ FL | sp, data = crabs)
bwplot( ~ FL | sp, data = crabs, layout = c(1, 2))
bwplot(sex ~ FL | sp, data = crabs, layout = c(1, 2))
library(lattice)
histogram( ~ FL | sp, data = crabs)
histogram( ~ FL | sex, data = crabs)
bwplot( ~ FL | sex, data = crabs, layout = c(1, 2))
bwplot( ~ FL | sp, data = crabs, layout = c(1, 2))
bwplot(sex ~ FL | sp, data = crabs, layout = c(1, 2))
xyplot(CL ~ CW | sp * sex, data = crabs)
xyplot(FL | sp * sex, data = crabs)
qqnorm(crabs[, "FL"])
qqline(crabs[, "FL"])
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
scatterplot3d(CL, CW, RW, color = ifelse(crabs$sp == "O", "orange", "blue"))
tamaño.muestra.r <- length(file.rendimiento)
tamaño.muestra.r
tamaño.muestra.r <- length(file.rendimiento)
cota.inferior <- tamaño.muestra.r*var(file.rendimiento)/ qchisq(0.975,tamaño.muestra.r -1)
cota.superior <- tamaño.muestra.r*var(file.rendimiento)/ qchisq(0.025,tamaño.muestra.r -1)
print(paste("cota inferior:", cota.inferior)) # 0.000185729256763415
print(paste("cota superior:",cota.superior)) # 0.000416833672429882
var(file.rendimiento)
var(file.rendimiento)
cuasivarianza<- (tamaño.muestra.r / (tamaño.muestra.r - 1))*var(file.rendimiento)
cuasivarianza
x<-seq(15.6,16.4,length.out=100)
paquete.cereales<-dnorm(x,16,0.12)
plot(x,paquete.cereales,type='l')
pnorm(15.95,16,(0.12/4))  # 0.04779035
0.12/4
pnorm(15.95,16,0.03)  # 0.04779035
pnorm(15.95,16,0.03)  # 0.04779035
#----- Ejercicio 2.3.
# Se reliza un contraste de la media sobre una población Normal con parámetros
# conocidos (media y desviacion).El análisis seleccionado será bilateral, elegiendo como hipótesis
# nula el valor de la media población y como hipotesis alternativa que esta es distinta
# Elegimos un nivel de significación para el contraste del 0.05 y como estadístico
# Media.muestral - Media.Poblacion/  (desviacion poblac / sqrt(tamanno de la muestra))
media.muestral <- 15.95
media.poblacion <- 16
desviacion.poblacion <- 0.12
tamanno.muestra <- 50
media.muestral <- 15.95
media.poblacion <- 16
desviacion.poblacion <- 0.12
tamanno.muestra <- 50
estadistico <-
(media.muestral - media.poblacion) /( (desviacion.poblacion)/sqrt(tamanno.muestra) )
estadistico
lambda <- qnorm(0.95,0,1)
lambda
library(MASS)
data(crabs)
rm(list=ls())
library(MASS)
data(crabs)
cangrejos<-crabs
#------ analisis del lóbulo frontal
#----------------------------------
hist(cangrejos$FL,xlab="tamaño lobulo frontal",main="densidad por tamaño lobulo frontal",
col="darkgrey",freq=F)
media<- mean(cangrejos$FL)  # 15.583
desviacion <- sd(cangrejos$FL) # 3.495
tamaño <- nrow(cangrejos)
muestra<-sort(rnorm(250,media,desviacion))
# ...contra  una normal 'teorica' basada en los parametros de la muestra.
lines(muestra,dnorm(muestra,media,desviacion),col="red")
ajuste.parametros <- ajuste.normal$estimate
lines(muestra,dnorm(muestra,ajuste.parametros[1],ajuste.parametros[2]),col="blue")
ajuste.normal <- fitdistr(cangrejos$FL,"normal") # mean=15.5830 (0.2465)
ajuste.parametros <- ajuste.normal$estimate
lines(muestra,dnorm(muestra,ajuste.parametros[1],ajuste.parametros[2]),col="blue")
ks.test
ks.test(unique(cangrejos$FL),"pnorm",mean(unique(cangrejos$FL)),sd(unique(cangrejos$FL)),
alternative = "two.sided")
alpha=0.05
cota.inferior.medlb <- media - qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #15.09439
cota.superior.medlb <- media + qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #16.07161
#aproximacion por la normal
cota.superior.medlb <- media - qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #16.06742
cota.inferior.medlb <- media + qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #15.09858
cota.superior.medlb
cota.inferior.medlb
attach(cangrejos)
library(lattice)
histogram( ~ FL | sp, data = crabs)
bwplot( ~ FL | sp, data = crabs, layout = c(1, 2))
histogram( ~ FL | sex, data = crabs)
bwplot( ~ FL | sex, data = crabs, layout = c(1, 2))
setwd("C:/Users/jfuente/Desktop/Contraste de Hipotesis/Intervalos de confianza - Daniel Girela")
rm(list=ls())
###################################################################################
#                            EJERCICIO-1                                          #
###################################################################################
# Obtencion del fichero de precios
# Utilizamos la funcion SCAN que nos devuelve un vector.
file.precios <-scan("precios.txt")
##### CALCULO DE VECTOR MUESTRA DE RENDIMIENTOS #######
##  Utilizamos la función diff aprovechando la cualidad de los logaritmos
##  por la cual el log de un cociente es igual a la diferencia de logaritmos del
#   numerador y denominador
file.rendimiento <- diff(log(file.precios))
#-- realizamos una primera observación de los estadísticos representativos de la muestra
summary(file.rendimiento)
# De la población solo conocemos que sigue una distribución normal, por lo que para
# estimar la varianza utilizamos el estadístico apoyado en ladistribución de chi-cuadrado
tamaño.muestra.r <- length(file.rendimiento)
cota.inferior <- tamaño.muestra.r*var(file.rendimiento)/ qchisq(0.975,tamaño.muestra.r -1)
cota.superior <- tamaño.muestra.r*var(file.rendimiento)/ qchisq(0.025,tamaño.muestra.r -1)
print(paste("cota inferior:", cota.inferior)) # 0.000185729256763415
print(paste("cota superior:",cota.superior)) # 0.000416833672429882
cuasivarianza<- (tamaño.muestra.r / (tamaño.muestra.r - 1))*var(file.rendimiento)
# Ajustamos los datos muestrales a una normal, utilizando el metodo de máxima
# verosimilitud
# Nos apoyamos en el paquete MASS
#library(MASS)
#resultado<-fitdistr(file.rendimiento,"normal")
#print(resultado)# 0.0161747558
#hist(file.rendimiento,col=rainbow(3),main="frecuencia",
#     ylab="$",xlab="rendimiento")
#################################################################################
#                       2º- EJERCICIO                                           #
#################################################################################
#----- POBLACION normal 16 onzas y desvicion  0.12
# Hacemos una representación de su función de densidad del 99% de los valores
x<-seq(15.6,16.4,length.out=100)
paquete.cereales<-dnorm(x,16,0.12)
plot(x,paquete.cereales,type='l')
#--- Ejercicio 3.1
#---- probabilidad x<15.95
pnorm(15.95,16,0.12) # 0.3384
#---Ejercicio 3.2
#---- muestra de 16 paquetes  contenga al menos 15.95
# la muestra sigue un distribucion N(16,0.12/sqrt(16))
pnorm(15.95,16,0.03)  # 0.04779035
#----- Ejercicio 2.3.
# Se reliza un contraste de la media sobre una población Normal con parámetros
# conocidos (media y desviacion).El análisis seleccionado será bilateral, elegiendo como hipótesis
# nula el valor de la media población y como hipotesis alternativa que esta es distinta
# Elegimos un nivel de significación para el contraste del 0.05 y como estadístico
# Media.muestral - Media.Poblacion/  (desviacion poblac / sqrt(tamanno de la muestra))
media.muestral <- 15.95
media.poblacion <- 16
desviacion.poblacion <- 0.12
tamanno.muestra <- 50
estadistico <-
(media.muestral - media.poblacion) /( (desviacion.poblacion)/sqrt(tamanno.muestra) )
lambda <- qnorm(0.95,0,1)
print(lambda) #  1.644854
print(estadistico) # -2.946278 .Esta fuera. El jefe tenia razon
# p-valor
print(pnorm(-2.946278,0,1))  # 0.00160 < 0.05 luego el jefe tenia razón...como siempre!
##########################################################################
#                 3º- EJERCICIO                                          #
##########################################################################
rm(list=ls())
library(MASS)
data(crabs)
cangrejos<-crabs
#------ analisis del lóbulo frontal
#----------------------------------
# Hacemos una primera aproximación representando el histogra...
hist(cangrejos$FL,xlab="tamaño lobulo frontal",main="densidad por tamaño lobulo frontal",
col="darkgrey",freq=F)
media<- mean(cangrejos$FL)  # 15.583
desviacion <- sd(cangrejos$FL) # 3.495
tamaño <- nrow(cangrejos)
muestra<-sort(rnorm(250,media,desviacion))
# ...contra  una normal 'teorica' basada en los parametros de la muestra.
lines(muestra,dnorm(muestra,media,desviacion),col="red")
# Realizamos un ajuste apoyados en la función fitdistr que estima los parametros de
# la poblacion por el metodo de máxima verosimilitud con la medida del error tipico.
ajuste.normal <- fitdistr(cangrejos$FL,"normal") # mean=15.5830 (0.2465)
# sd=3.4866 (0.17433)
ajuste.parametros <- ajuste.normal$estimate
lines(muestra,dnorm(muestra,ajuste.parametros[1],ajuste.parametros[2]),col="blue")
# De manera cuantitativa vamos a realizar un contraste no parametrico para medir
# la bondad del ajuste y permita dar una respuesta concluyente.
# Tomamos por ejemplo el contraste de Kolmogorov-Smirnoff
# HIPOTESIS NULA: Los datos pertenecen a la normal
ks.test(unique(cangrejos$FL),"pnorm",mean(unique(cangrejos$FL)),sd(unique(cangrejos$FL)),
alternative = "two.sided") # p-value- 0.866  0.05 osea se acepta la bondad del ajuste
shapiro.test(cangrejos$FL) # p-value= 0.203
#------ intervalor de confianza para la media y la varianza del  lóbulo frontal
#----------------------------------
#--- Asumimos que la población sigue una distribución de población normal con
#--- parámetros desconocidos (Media y desviación). Al no conocer la desivación poblacional
#--- se utiliza un estadistico apoya en la distribucion de t-student
#--- intervalo media (nivel alpha=0.05)
#### PDTE CONFIRMAR TAMPO N-1 o N
alpha=0.05
cota.inferior.medlb <- media - qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #15.09439
cota.superior.medlb <- media + qt(1-alpha/2,tamaño -1)*desviacion / sqrt(tamaño - 1) #16.07161
#aproximacion por la normal
cota.superior.medlb <- media - qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #16.06742
cota.inferior.medlb <- media + qnorm(alpha/2,0,1)*desviacion / sqrt(tamaño) #15.09858
#--- intervalo para la varianza
alpha=0.05
cota.inferior.varlb <- (tamaño - 1)*var(cangrejos$FL) / qchisq(1-alpha/2,tamaño - 1) #10.13188
cota.superior.varlb <- (tamaño - 1)*var(cangrejos$FL) / qchisq(alpha/2,tamaño - 1)  # 15.02379
#------ Influye el sexo en el tamaño del lobulo
# Vamos hacer un contraste de hioitesis por diferencia de medias para los dos grupos
cangrejos.machos  <- cangrejos[cangrejos$sex =="M","FL"]
cangrejos.hembras <- cangrejos[cangrejos$sex =="F","FL"]
# hacemos el t.test
t.test(cangrejos.machos,cangrejos.hembras,alternative=c("two.sided"),conf.level=0.95)
# p-value = 0.5426  p-valor alto las diferncias detectadas son minimas
# t = 0.60998
#----- Influye la especie en el tamaño del lobulo
cangrejos.espc.o  <- cangrejos[cangrejos$sp == "O","FL"]
cangrejos.espc.b  <- cangrejos[cangrejos$sp == "B","FL"]
t.test(cangrejos.espc.o,cangrejos.espc.b,alternative=c("two.sided"),conf.level=0.95)
#  p-value = 8.97e-11
# t = 6.8551
#######  ANALISIS VISUAL
attach(cangrejos)
library(lattice)
histogram( ~ FL | sp, data = crabs)
histogram( ~ FL | sex, data = crabs)
bwplot( ~ FL | sex, data = crabs, layout = c(1, 2))
bwplot( ~ FL | sp, data = crabs, layout = c(1, 2))
bwplot(sex ~ FL | sp, data = crabs, layout = c(1, 2))
qqnorm(crabs[, "FL"])
qqline(crabs[, "FL"])
library(scatterplot3d)
scatterplot3d(CL, CW, RW, color = ifelse(crabs$sp == "O", "orange", "blue"))
rownames(matriz) <- as.character(crabs$sp)
matriz <- data.matrix(crabs[, -c(1, 2, 3)])
vect <- as.vector(t(matriz))
nombres <- factor(rep(names(crabs[, -c(1, 2, 3)]), 200))
especie <- rep(crabs$sp, each = 5)
cangrejos <- data.frame(caract = nombres, val = vect, esp = especie)
cangrejos[1:10,]
matriz[1:2,]
rownames(matriz) <- as.character(crabs$sp)
biplot(prcomp(matriz), choice = 2:3)
help(crabs)
library(ggplot2)
ggplot(FL, aes(x = FL)) +
geom_histogram()
ggplot(FL, aes(x = Home.Value)) +
geom_histogram()
matrix<-c(1,2,3,4,5,6,7,8,9),3,3)
matrix<-(c(1,2,3,4,5,6,7,8,9),3,3)
matriz<-matrix(c(1,2,3,4,5,6,7,8,9),3,3)
matriz
matriz<-matrix(c(1,2,3,4,5,6,7,8,9),3,3,byrow=T)
matriz
matriz.1<-t(matriz)
matriz.1
matriz.2<-t(matriz.1)
matriz.2
vector<-c(1,3,5,6)
resultado<-sample(vector)
resultado
vector<-c(1,3,5,"a")
vector<-c(1,3,5,"a")
print(vector)
vector<-c(1,3,5,"a",T)
print(vector)
x<-range(5)
x
y<-range(1,2,3)
y
z<-range(10)
z
z<-range(10,5)
z
?range
vector<-c(1,2,3,4,5,6)
sample(vector)
vector<-c(1,2,3,4,5,6)
sample(vector,30)
?sample
sample(vector,3)
x <- 1:12
sample(x, replace = TRUE)
setwd("C:/Users/jfuente/Desktop/practica R")
# PRACTICA EJERCICIO  DATA SET BIKES
# tratamiento de dataset bikes.csv
# Limpiamos area de trabajo
rm(list=ls())
#*********** EJERCICIO 1 *********************#
# 1.1 LEER EL FICHERO  bikes.csv Y ASIGNARLO A UNA VARIABLE
bikes<-read.csv('bikes.csv')
# 1.2  COMPROBAR LA CLASE DEL OBJETO
class(bikes)
# 1.3  TIPOS y MUESTRA
str(bikes)
# 1.4 MOSTAR 15 PRIMERO REGISTROS DEL DATASET
head(bikes,15)
# 1.5 MOSTRAR 20 ULTIMOS REGISTROS DEL DATASET
tail(bikes,20)
# 1.6 DIMENSIONES DEL DATASET
dim(bikes)
# 1.7 NOMBRES DE LAS VARIABLES DEL DATASET
colnames(bikes)
# 1.8 CREAR FACTOR PARA SEASON Y WEEKDAY
bikes$season <- factor(bikes$season,levels=c(1,2,3,4),labels=c('winter','spring','summer','fall'))
bikes$weekday <- factor(bikes$weekday,levels=c(0,1,2,3,4,5,6),ordered = T,labels=c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'))
# 1.9 CONVERTIR A BOOLEANAS
bikes$is.holiday <- as.logical(bikes$is.holiday)
bikes$is.workingday <- as.logical(bikes$is.workingday)
# 1.10  CALCULAR LA SUMA DE LA COLUMNA casual
suma.casual <- sum(bikes$casual)
# 1.11 TOTAL DE casual y registered
total <- colSums(bikes[,c("casual","registered")])
# 1.12 Â¿QUE VARIABLES SON NUMERICAS?-FUNCION SAPPLY-
numericas <-sapply(bikes,is.numeric)
colnames(bikes)[numericas]
# 1.13 MEDIA DE LOS REGISTROS NUMERICOS
media <- sapply(bikes[,numericas], mean)
# 1.14 SELECCION Monday , 15 y 20 horas y temperatura > 25
boolean_seleccion1 <- (bikes$weekday == "Monday") &  (bikes$hour > 15) & (bikes$hour< 20) & (bikes$temp > 25)
seleccion_1 <- bikes[boolean_seleccion1,]
# 1.15 SELECCION DE LAS PRIMERAS 100 FILAS Y TODAS LAS COLUMNAS MENOS LAS DOS ULTIMAS CON INDICES POSTIVOS
head(bikes[c(1:(dim(bikes)[2] - 2))],100)
# 1.16 SELECCION DE LAS PRIMERAS 100 FILAS Y TODAS LAS COLUMNAS MENOS LAS DOS ULTIMAS CON INDICES NEGATIVOS
head(bikes[c(-dim(bikes)[2]+1,- dim(bikes)[2])],100)
# 1.17 OBTENCION DE LOS CUARTILES DE LA VARIABLE HUM
quantile (bikes$hum,probs = c(0.25,0.5,0.75))
# 1.18 OBTENCION DE LOS DECILES DE LA VARIABLE HUM
quantile (bikes$hum,probs = seq(from=0.1, to=0.9,by=0.1))
# 1.19 OBTENCION DE TODOS LOS ESTADISTICOS
summary(bikes)
# 1.20 NUMERO DE VALORES UNICOS DE LA VARIABLE atemp
length(unique(bikes$atemp))
# 1.21 NUMERO DE REGISTROS CON VARIABLE CASUAL > 100
boolean_seleccion21 <- bikes$casual > 100
nrow(bikes[boolean_seleccion21,])
# 1.22 ORDENAR DE MAYOR A MENOR LOS 100 PRIMEROS ELTOS DE LA VARIABLE registered
vector_ranking <- order(head(bikes$registered,100))
#----------- todo el dataframe ----------
bikes[vector_ranking,]
#----------- solo los elementos registered
bikes$registered[vector_ranking]
# 1.23 ORDENAR EL DATASET POR LA VARIABLE registered de manera ascendente
vector_ranking_dataset <- order(bikes$registered)
resultado <- bikes[vector_ranking_dataset,]
#----insepccionamos los primeros registros
head(resultado$registered,300)
head(resultado,300)
# 1.24 OBTENER LOS INDICES DE LOS REGISTROS DONDE LA VARIABLE temp > MEDIA
which(bikes$temp > mean(bikes$temp))
# 1.25 OBTENER LOS REGISTROS PARA LO QUE LA VARIABLE windspeed ES MAXIMA
vector_seleccion25 <- (bikes$windspeed == max(bikes$windspeed))
bikes[vector_seleccion25,]
# 1.26 COMPROBAR SI ALGUNA VARIABLE TIENE NA's
any((sapply(bikes,is.na)))
# 1.27 COMPROBAR SI LA VARIBALE windspeed tiene OUtLIER's con BOXPLOT
boxplot(bikes$windspeed) # si lo tienes.
# 1.28 HISTOGRAMA DE LA VARIABLE temp
hist(bikes$atemp)
# 1.29 CREAR FUNCION  (cold.heat) con dos parametros . Devolver cold si es inf al limite,HEAT si es superior
#Compronar el funcionamiento.
cold.heat <-function(temperatura,limite=20){
if (temperatura < limite){
return("COLD")
}else{
return("HEAT")
}
}
cold.heat(35)
cold.heat(10)
cold.heat(25,30)
# 1.30 USAR LA FUNCIONA APPLY PARA APLICAR LA FUNCION  CREADA A TODA LA COLUMNA TEMP e INCORPORARLA AL DATASET
bikes$cold.heat <- sapply(bikes$temp,cold.heat)
head(bikes,10)
#************** EJERCICIO2 **********************************
######## 2.1    CREAR UN NUEVO DADA SET SEPARANDO LA FECHA EN CAMPOS ANNO MES DIA
#-------- CON TIDYR ---------------------------
library(tidyr)
library(reshape2)
bikes.separated <-  bikes %>% separate(date,into=c("year","month","day"),sep="-")
####### 2.2  CREAR LONG DATA SET QUE CONTENGA LAS VARIABLES DATE,HOUR,VARIABLE...
bikes.select <- bikes[,c("date","hour","temp","atemp","hum","windspeed")]
#------- CON  RESHAPE2 ----------------------------
bikes.longset <-
bikes.select  %>% melt(c("date","hour"),variable.names="VARIABLES",values.names="VALUES")
#------- CON TIDYR -------------------------------
bikes.longset.td <-
bikes.select %>% gather(my_key,my_value,-date,-hour)
###### 2.3  OBTENCION DEL DATA SET WIDE SET ###########
#----- CON RESHAPE2 -------------------------------
bikes.wideset <-
bikes.longset %>% dcast(date + hour ~ variable)
#----- CON TIDYR -------------------------------
bikes.wideset.td <-
bikes.longset.td %>% spread(my_key,my_value)
#*************** EJERCICIO3 **************************************
#---------------- CARGAMOS LOS PAQUETES DPLYR , DATA.TABLE -------
#-----
#rm(list=ls())
library(dplyr)
library(data.table)
bikes.dt <- data.table(bikes)
#bikes<-read.csv('bikes.csv')
######### 3.1 NUMERO DE USUARIO REGISTRADOS POR DIA ##########
#-------- CON DPLYR --------------------------
bikes.resultado1 <- tbl_df(bikes) %>%
select(weekday,registered) %>%
group_by(weekday) %>%
summarise(round(mean(registered)))
#------- CON DATA.TABLE ----------------------
bikes.resutado1.dt<- bikes.dt[,.(mean.user = round(mean(registered))),by=.(weekday)]
#######  3.2 ORDENAR DE MENOR A MAYOR LAS TEMP MAX. DE CADA ESTACION #######
#------- CON DPLYR ----------------------------
bikes.resultado2 <- tbl_df(bikes) %>%
select(season,temp) %>%
group_by(season) %>%
summarise(maximo=max(temp))  %>%
arrange(maximo)
#------  CON DATA.TABLE ----------------------
bikes.resutado2.dt <- bikes.dt[,.(max.temp = max(temp)), by=.(season)][order(max.temp)]
####### 3.3 NUMERO TOTAL DE USUARIO REGISTRADOS y CASUALES POR DIA DE LA SEMANA y FESTIVO
# INTERPRETAMOS QUE SE QUIERE LA SUMA SEPARADA DE USUARIOS  POR SOLO LOS DIAS QUE HAN SIDO FESTIVOS
#------ CON DPLYR ----------------------------
bikes.resultado3 <- tbl_df(bikes) %>%
select(weekday,is.holiday,registered,casual) %>%
filter(is.holiday)  %>%
group_by(weekday) %>%
summarise(tot.registered=sum(registered),tot.casual=sum(casual))  %>%
#---- CON DATA.TABLE ------------------------
bikes.resultado3.dt <-
bikes.dt[,.(tot.registered=sum(registered),tot.casual=sum(casual)),by=.(weekday,is.holiday)][is.holiday==T,.(weekday,tot.registered,tot.casual)]
#######  3.4 NUMERO TOTAL DE USUARIOS EN DIAS FESTIVOS y NO FESTIVOS ########
#---- CON DPLYR ----------------------------
bikes.resultado4 <- tbl_df(bikes) %>%
select(is.holiday,registered,casual)  %>%
group_by(is.holiday)  %>%
summarise(tot.registered = sum(registered), tot.casual=sum(casual)) %>%
mutate(tot.customer = tot.registered + tot.casual) %>%
select(is.holiday,tot.customer)
#--- CON DATA.TABLE ------------------------
bikes.resultado4.dt <-
bikes.dt[,.(tot.registered=sum(registered)+sum(casual)),by=.(is.holiday)]
#######  3.5 DIA CON MAYOR NUMERO DE ALQUILERES CASUALES ############
#----  CON DPLYR ----------------------------
bikes.resultado5  <- tbl_df(bikes) %>%
select(date,casual) %>%
group_by(date) %>%
summarise(total=sum(casual)) %>%
arrange(desc(total)) %>%
head(1)
#--- CON DATA.TABLE
bikes.resultado5.dt <-
bikes.dt[,.(tot.casual=sum(casual)),by=.(date)][order(-tot.casual)][1,]
#######   3.6 CALCULAR RATIO DE ALQUILERES REGISTR/CASUALES POR HORA EN VERANO  #####
#------ CON DPLYR ----------------------
bikes.resultado6   <-  tbl_df(bikes) %>%
filter(season == "summer") %>%
select(hour,registered,casual) %>%
group_by(hour) %>%
summarise(tot.casual=sum(casual),tot.registered=sum(registered)) %>%
mutate(ratio=round(tot.registered / tot.casual,2)) %>%
select(hour,ratio)
#----- CON DATA.TABLE --------------------
bikes.resultado6.dt <-
bikes.dt[season=="summer",.(ratio=round(sum(registered)/sum(casual),2)),by=.(hour)]
#### 3.7 Nº TOTAL DE ALQUILERES REGISTRADOS,TEMP MEDIA,HUM MAX y VELC MIN DE LOS LUNES FESTIVOS
#------ CON DPLYR ----------------------
bikes.resultado7  <- tbl_df(bikes) %>%
select(weekday,is.holiday,temp,hum,windspeed,registered) %>%
filter(weekday == "Monday" & is.holiday == 1)  %>%
summarise(tot.registered=sum(registered),temp.mean=mean(temp),max.hum=max(hum),min.speed=min(windspeed)) %>%
select(tot.registered,temp.mean,max.hum,min.speed)
#------ CON DATA.TABLE  ----------------------
bikes.resultado7.dt <-
bikes.dt[weekday=="Monday" & is.holiday == 1,.(tot.registered=sum(registered),temp.mean=mean(temp),max.hum=max(hum),min.speed=min(windspeed))]
bikes.resultado7.dt
bikes.resultado7  <- tbl_df(bikes) %>%
select(weekday,is.holiday,temp,hum,windspeed,registered) %>%
filter(weekday == "Monday" & is.holiday == 1)  %>%
summarise(tot.registered=sum(registered),temp.mean=mean(temp),max.hum=max(hum),min.speed=min(windspeed)) %>%
select(tot.registered,temp.mean,max.hum,min.speed)
bikes.resultado7
bikes.resultado6
